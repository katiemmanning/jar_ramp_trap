qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(2.5))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
dotchart(intermediate$abundance, main = "abundance", group = intermediate$Trap) # way to visualize outliers
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(3))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(3.5))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(.5))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(4))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(4.5))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(5))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(6))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(6.5))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
densityPlot(rstudent(abundance.model_intermediate)) # check density estimate of the distribution of residuals
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(2))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(2.5))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(3))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(2))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(2.5))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(2))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(1))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
plot(abundance.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model_intermediate))
qqline(resid(abundance.model_intermediate))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(2))
plot(simulateResiduals(abundance.model_intermediate)) # another way to check for normality and homogeneity of variance
densityPlot(rstudent(abundance.model_intermediate)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(abundance.model_intermediate)
dotchart(intermediate$diversity, main = "diversity", group = intermediate$Trap) # way to visualize outliers
with(intermediate, ad.test(diversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(intermediate, bartlett.test(diversity ~ Trap)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
diversity.model_intermediate<-lmer(diversity ~ Trap + Date + (1 | Site:Replicate), data=intermediate)
summary(diversity.model_intermediate)
anova(diversity.model_intermediate)
plot(diversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(diversity.model_intermediate))
qqline(resid(diversity.model_intermediate))
plot(simulateResiduals(diversity.model_intermediate)) # another way to check for normality and homogeneity of variance
densityPlot(rstudent(diversity.model_intermediate)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(diversity.model_intermediate)
influenceIndexPlot(diversity.model_intermediate, vars = c("Cook"), id = list(n = 3))
dotchart(intermediate$simpdiversity, main = "simpdiversity", group = intermediate$Trap) # way to visualize outliers
with(intermediate, ad.test(simpdiversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(intermediate, bartlett.test(simpdiversity ~ Trap)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
simpdiversity.model_intermediate<-lmer(simpdiversity ~ Trap + Date + (1 | Site:Replicate), data=intermediate)
summary(simpdiversity.model_intermediate)
anova(simpdiversity.model_intermediate)
plot(simpdiversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(simpdiversity.model_intermediate))
qqline(resid(simpdiversity.model_intermediate))
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
simpdiversity.model_intermediate<-lmer(simpdiversity ~ Trap +  (1 | Site:Replicate), data=intermediate)
summary(simpdiversity.model_intermediate)
anova(simpdiversity.model_intermediate)
plot(simpdiversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(simpdiversity.model_intermediate))
qqline(resid(simpdiversity.model_intermediate))
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
simpdiversity.model_intermediate<-glmer(simpdiversity ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(2))
summary(simpdiversity.model_intermediate)
anova(simpdiversity.model_intermediate)
plot(simpdiversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(simpdiversity.model_intermediate))
qqline(resid(simpdiversity.model_intermediate))
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
simpdiversity.model_intermediate<-glmer(simpdiversity ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(4))
summary(simpdiversity.model_intermediate)
anova(simpdiversity.model_intermediate)
plot(simpdiversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(simpdiversity.model_intermediate))
qqline(resid(simpdiversity.model_intermediate))
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
dotchart(intermediate$simpdiversity, main = "simpdiversity", group = intermediate$Trap) # way to visualize outliers
simpdiversity.model_intermediate<-glmer(simpdiversity ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(0.5))
summary(simpdiversity.model_intermediate)
anova(simpdiversity.model_intermediate)
plot(simpdiversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(simpdiversity.model_intermediate))
qqline(resid(simpdiversity.model_intermediate))
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
simpdiversity.model_intermediate<-glmer(simpdiversity ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(0.2))
summary(simpdiversity.model_intermediate)
anova(simpdiversity.model_intermediate)
plot(simpdiversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(simpdiversity.model_intermediate))
qqline(resid(simpdiversity.model_intermediate))
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
simpdiversity.model_intermediate<-glmer(simpdiversity ~ Trap + Date + (1 | Site:Replicate), data=intermediate, family = negative.binomial(1))
summary(simpdiversity.model_intermediate)
anova(simpdiversity.model_intermediate)
plot(simpdiversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(simpdiversity.model_intermediate))
qqline(resid(simpdiversity.model_intermediate))
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
simpdiversity.model_intermediate<-glmer(simpdiversity ~ Trap + Date + (1 | Site:Replicate), data=intermediate)
summary(simpdiversity.model_intermediate)
anova(simpdiversity.model_intermediate)
plot(simpdiversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(simpdiversity.model_intermediate))
qqline(resid(simpdiversity.model_intermediate))
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
simpdiversity.model_intermediate<-lmer(simpdiversity ~ Trap + Date + (1 | Site:Replicate), data=intermediate)
summary(simpdiversity.model_intermediate)
anova(simpdiversity.model_intermediate)
plot(simpdiversity.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(simpdiversity.model_intermediate))
qqline(resid(simpdiversity.model_intermediate))
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
dotchart(intermediate$evenness, main = "evenness", group = intermediate$Trap) # way to visualize outliers
with(intermediate, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(intermediate, bartlett.test(evenness ~ Trap)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
evenness.model_intermediate<-lmer(evenness ~ Trap + Date + (1 | Site:Replicate), data=intermediate)
summary(evenness.model_intermediate)
anova(evenness.model_intermediate)
plot(evenness.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenness.model_intermediate))
qqline(resid(evenness.model_intermediate))
plot(simulateResiduals(evenness.model_intermediate)) # another way to check for normality and homogeneity of variance
evenness.model_intermediate<-lmer(evenness ~ Trap +  (1 | Site:Replicate), data=intermediate)
summary(evenness.model_intermediate)
anova(evenness.model_intermediate)
plot(evenness.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenness.model_intermediate))
qqline(resid(evenness.model_intermediate))
plot(simulateResiduals(evenness.model_intermediate)) # another way to check for normality and homogeneity of variance
evenness.model_intermediate<-lmer(evenness ~ Trap + Date + (1 | Site:Replicate), data=intermediate)
summary(evenness.model_intermediate)
anova(evenness.model_intermediate)
plot(evenness.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenness.model_intermediate))
qqline(resid(evenness.model_intermediate))
plot(simulateResiduals(evenness.model_intermediate)) # another way to check for normality and homogeneity of variance
evenness.model_intermediate<-lmer(evenness ~ Trap + (1 | Site:Replicate), data=intermediate)
summary(evenness.model_intermediate)
anova(evenness.model_intermediate)
plot(evenness.model_intermediate) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenness.model_intermediate))
qqline(resid(evenness.model_intermediate))
plot(simulateResiduals(evenness.model_intermediate)) # another way to check for normality and homogeneity of variance
densityPlot(rstudent(evenness.model_intermediate)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(evenness.model_intermediate)
influenceIndexPlot(evenness.model_intermediate, vars = c("Cook"), id = list(n = 3))
dotchart(flying$evenness, main = "evenness", group = flying$Trap) # way to visualize outliers
with(flying, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(flying, bartlett.test(evenness ~ Trap)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
diversity.model_flying<-lmer(evenness ~ Trap + Date + (1 | Site:Replicate), data=flying)
summary(evenness.model_flying)
anova(evenness.model_flying)
plot(evenness.model_flying) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenness.model_flying))
qqline(resid(evenness.model_flying))
plot(simulateResiduals(evenness.model_flying)) # another way to check for normality and homogeneity of variance
plot(simulateResiduals(richness.model_flying)) # another way to check for normality and homogeneity of variance
plot(simulateResiduals(simpdiversity.model_flying)) # another way to check for normality and homogeneity of variance
plot(simulateResiduals(richness.model_intermediate)) # another way to check for normality and homogeneity of variance
plot(simulateResiduals(simpdiversity.model_intermediate)) # another way to check for normality and homogeneity of variance
plot(simulateResiduals(evenness.model_intermediate)) # another way to check for normality and homogeneity of variance
#Abundance
#abundance model for flying arthropods
#AIC = 1194
abundance.model_flying<-glmer(abundance ~ Trap + Date + (1|Site:Replicate), data=flying,family = negative.binomial(4.5))
summary(abundance.model_flying)
Anova(abundance.model_flying)
AIC(abundance.model_flying)
#pairwise comparison
abun_f.emm<-emmeans(abundance.model_flying,pairwise~Trap)
abun_f.emm
#abundance model for crawling arthropods
#AIC = 1013
abundance.model_crawling<-glmer(abundance ~ Trap + Date + (1|Site:Replicate), data=crawling,family = negative.binomial(2))
summary(abundance.model_crawling)
Anova(abundance.model_crawling)
AIC(abundance.model_crawling)
#pairwise comparison
abun_c.emm<-emmeans(abundance.model_crawling,pairwise~Trap)
abun_c.emm
#abundance model for intermediate arthropods
#AIC = 1021
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1|Site:Replicate), data=intermediate, family = negative.binomial(2))
summary(abundance.model_intermediate)
Anova(abundance.model_intermediate)
AIC(abundance.model_intermediate)
AIC(abundance.model_crawling)
AIC(abundance.model_flying)
#abundance model for intermediate arthropods
#AIC = 977
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1|Site:Replicate), data=intermediate, family = negative.binomial(2))
summary(abundance.model_intermediate)
Anova(abundance.model_intermediate)
AIC(abundance.model_intermediate)
#pairwise comparison
abun_i.emm<-emmeans(abundance.model_intermediate,pairwise~Trap)
abun_i.emm
#Richness
#richness model for flying arthropods
#AIC = 552
richness.model_flying<-lmer(richness ~ Trap + Date + (1|Site:Replicate), data=flying)
summary(richness.model_flying)
Anova(richness.model_flying)
AIC(richness.model_flying)
#pairwise comparison
rich_f.emm<-emmeans(richness.model_flying,pairwise~Trap)
rich_f.emm
#richness model for crawling arthropods
#AIC = 395
richness.model_crawling<-lmer(richness ~ Trap + Date + (1|Site:Replicate), data=crawling)
summary(richness.model_crawling)
Anova(richness.model_crawling)
AIC(richness.model_crawling)
#pairwise comparison
rich_c.emm<-emmeans(richness.model_crawling,pairwise~Trap)
rich_c.emm
#richness model for intermediate arthropods
#AIC = 356
richness.model_intermediate<-lmer(richness ~ Trap + Date + (1|Site:Replicate), data=intermediate)
summary(richness.model_intermediate)
Anova(richness.model_intermediate)
AIC(richness.model_intermediate)
#pairwise comparison
rich_i.emm<-emmeans(richness.model_intermediate,pairwise~Trap)
rich_i.emm
#Shannon diversity
#shan div model for flying arthropods
#AIC = 111
diversity.model_flying<-lmer(diversity ~ Trap + Date + (1|Site:Replicate), data=flying)
summary(diversity.model_flying)
Anova(diversity.model_flying)
AIC(diversity.model_flying)
#pairwise comparison
div_f.emm<-emmeans(diversity.model_flying,pairwise~Trap)
div_f.emm
#shan div model for crawling arthropods
#AIC = 143
diversity.model_crawling<-lmer(diversity ~ Trap + Date + (1|Site:Replicate), data=crawling)
summary(diversity.model_crawling)
Anova(diversity.model_crawling)
AIC(diversity.model_crawling)
#pairwise comparison
div_c.emm<-emmeans(diversity.model_crawling,pairwise~Trap)
div_c.emm
#shan div model for intermediate arthropods
#AIC = 135
diversity.model_intermediate<-lmer(diversity ~ Trap + Date + (1|Site:Replicate), data=intermediate)
summary(diversity.model_intermediate)
Anova(diversity.model_intermediate)
AIC(diversity.model_intermediate)
#shan div model for intermediate arthropods
#AIC = 135
diversity.model_intermediate<-lmer(diversity ~ Trap + Date + (1|Site:Replicate), data=intermediate)
summary(diversity.model_intermediate)
Anova(diversity.model_intermediate)
AIC(diversity.model_intermediate)
#pairwise comparison
div_i.emm<-emmeans(diversity.model_intermediate,pairwise~Trap)
div_i.emm
#results: no difference between any
div_i.cld<-multcomp::cld(div_i.emm, alpha = 0.05, Letters = LETTERS)
#Inverse Simpson diversity
#inv simp div model for flying arthropods
#AIC = 320
simpdiversity.model_flying<-lmer(simpdiversity ~ Trap + Date + (1|Site:Replicate), data=flying)
summary(simpdiversity.model_flying)
Anova(simpdiversity.model_flying)
AIC(simpdiversity.model_flying)
#pairwise comparison
sdiv_f.emm<-emmeans(simpdiversity.model_flying,pairwise~Trap)
sdiv_f.emm
#inv simp div model for crawling arthropods
#AIC = 351
simpdiversity.model_crawling<-lmer(simpdiversity ~ Trap + Date + (1|Site:Replicate), data=crawling)
summary(simpdiversity.model_crawling)
Anova(simpdiversity.model_crawling)
AIC(simpdiversity.model_crawling)
#pairwise comparison
sdiv_c.emm<-emmeans(simpdiversity.model_crawling,pairwise~Trap)
sdiv_c.emm
#inv simp div model for intermediate arthropods
#AIC = 238
simpdiversity.model_intermediate<-lmer(simpdiversity ~ Trap + Date + (1|Site:Replicate), data=intermediate)
summary(simpdiversity.model_intermediate)
Anova(simpdiversity.model_intermediate)
AIC(simpdiversity.model_intermediate)
#pairwise comparison
sdiv_i.emm<-emmeans(simpdiversity.model_intermediate,pairwise~Trap)
sdiv_i.emm
#Evenness
#evenness model for flying arthropods
#AIC = -118
evenness.model_flying<-lmer(evenness ~ Trap + Date + (1|Site:Replicate), data=flying)
summary(evenness.model_flying)
Anova(evenness.model_flying)
AIC(evenness.model_flying)
#pairwise comparison
even_f.emm<-emmeans(evenness.model_flying,pairwise~Trap)
even_f.emm
#results: no diff btw ramp-sticky, diff btw all else
even_f.cld<-multcomp::cld(even_f.emm, alpha = 0.05, Letters = LETTERS)
even_f.cld
#evenness model for crawling arthropods
#AIC = -27
evenness.model_crawling<-lmer(evenness ~ Trap + (1|Site:Replicate), data=crawling)
summary(evenness.model_crawling)
Anova(evenness.model_crawling)
AIC(evenness.model_crawling)
#pairwise comparison
even_c.emm<-emmeans(evenness.model_crawling,pairwise~Trap)
even_c.emm
#evenness model for intermediate arthropods
#AIC = 23
evenness.model_intermediate<-lmer(evenness ~ Trap + (1|Site:Replicate), data=intermediate)
summary(evenness.model_intermediate)
Anova(evenness.model_intermediate)
AIC(evenness.model_intermediate)
e
#pairwise comparison
even_i.emm<-emmeans(evenness.model_intermediate,pairwise~Trap)
even_i.emm
#results: no diff btw sticky and jar, diff btw all else
even_i.cld<-multcomp::cld(even_i.emm, alpha = 0.05, Letters = LETTERS)
even_i.cld
#Evenness
#evenness model for flying arthropods
#AIC = -118
evenness.model_flying<-lmer(evenness ~ Trap + Date + (1|Site:Replicate), data=flying)
summary(evenness.model_flying)
Anova(evenness.model_flying)
AIC(evenness.model_flying)
#pairwise comparison
even_f.emm<-emmeans(evenness.model_flying,pairwise~Trap)
even_f.emm
#evenness model for crawling arthropods
#AIC = -58
evenness.model_crawling<-lmer(evenness ~ Trap + (1|Site:Replicate), data=crawling)
summary(evenness.model_crawling)
Anova(evenness.model_crawling)
AIC(evenness.model_crawling)
#pairwise comparison
even_c.emm<-emmeans(evenness.model_crawling,pairwise~Trap)
even_c.emm
#evenness model for intermediate arthropods
#AIC = 15
evenness.model_intermediate<-lmer(evenness ~ Trap + (1|Site:Replicate), data=intermediate)
summary(evenness.model_intermediate)
Anova(evenness.model_intermediate)
AIC(evenness.model_intermediate)
#pairwise comparison
even_i.emm<-emmeans(evenness.model_intermediate,pairwise~Trap)
even_i.emm
#Abundance
#abundance model for flying arthropods
#AIC = 1165
abundance.model_flying<-glmer(abundance ~ Trap + Date + (1|Site:Replicate), data=flying,family = negative.binomial(4.5))
summary(abundance.model_flying)
Anova(abundance.model_flying)
AIC(abundance.model_flying)
#pairwise comparison
abun_f.emm<-emmeans(abundance.model_flying,pairwise~Trap)
abun_f.emm
#results: no diff btw ramp-sticky, diff between all else
abun_f.cld<-multcomp::cld(abun_f.emm, alpha = 0.05, Letters = LETTERS)
abun_f.cld
#abundance model for crawling arthropods
#AIC = 1013
abundance.model_crawling<-glmer(abundance ~ Trap + Date + (1|Site:Replicate), data=crawling,family = negative.binomial(2))
summary(abundance.model_crawling)
Anova(abundance.model_crawling)
AIC(abundance.model_crawling)
#pairwise comparison
abun_c.emm<-emmeans(abundance.model_crawling,pairwise~Trap)
abun_c.emm
#results: no diff btw jar-pitfall, diff between all else
abun_c.cld<-multcomp::cld(abun_c.emm, alpha = 0.05, Letters = LETTERS)
abun_c.cld
#abundance model for intermediate arthropods
#AIC = 977
abundance.model_intermediate<-glmer(abundance ~ Trap + Date + (1|Site:Replicate), data=intermediate, family = negative.binomial(2))
summary(abundance.model_intermediate)
Anova(abundance.model_intermediate)
AIC(abundance.model_intermediate)
#pairwise comparison
abun_i.emm<-emmeans(abundance.model_intermediate,pairwise~Trap)
abun_i.emm
#results:  diff btw all
abun_i.cld<-multcomp::cld(abun_i.emm, alpha = 0.05, Letters = LETTERS)
abun_i.cld
